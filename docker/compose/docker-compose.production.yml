# Rally MCP Server - Production Docker Compose
# Production deployment with proper networking and security

version: '3.8'

services:
  rally-mcp:
    build:
      context: ../..
      dockerfile: docker/dockerfiles/Dockerfile.production
      target: production
    container_name: rally-mcp-server
    restart: unless-stopped

    # Environment configuration
    environment:
      - NODE_ENV=production
      - RALLY_TRANSPORT=sse
      - RALLY_SERVER_PORT=3000
      - RALLY_SERVER_HOST=0.0.0.0
      - LOG_LEVEL=info
      - HTTP_TIMEOUT=30000
      - CONNECTION_POOL_SIZE=10

    # Load Rally API key from environment or secrets
    env_file:
      - ../../.env.production

    # Port mapping
    ports:
      - "3000:3000"

    # Health check
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

    # Security
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /app/logs:noexec,nosuid,size=50m

    # Networking
    networks:
      - rally-network

networks:
  rally-network:
    driver: bridge
    name: rally-mcp-network

# Volumes for persistent data (if needed)
volumes:
  rally-logs:
    driver: local